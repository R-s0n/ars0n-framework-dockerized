# production environment. fit for selfhosting on a vps.  NOT YET!!!! :)

x-defaults: &defaults
  # cap_drop:
  #   - ALL
  restart: unless-stopped
  env_file:
    - .env

services:
  ars0n-server:
    <<: *defaults
    build:
      dockerfile: ./Docker/Dockerfile.server
    depends_on:
      - ars0n-mongodb
    ports:
      - "8000:8000"
    hostname: node-server

  ars0n-client:
    <<: *defaults
    build:
      dockerfile: ./Docker/Dockerfile.client
    ports:
      - "3000:3000"

  ars0n-toolkit:
    <<: *defaults
    build:
      dockerfile: ./Docker/Dockerfile.toolkit
    env_file:
      - .env
    ports:
      - "5000:5000"
    hostname: toolkit-server
    volumes:
      - ./configs/toolkit:/configs

  ars0n-mongodb:
    <<: *defaults
    image: mongo:latest
    hostname: mongodb-server
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./configs/Docker/mongod.conf:/etc/mongo/mongod.conf
      - ./data/logs/mongodb:/var/log/mongodb/
    # command: ["mongod", "--config", "/etc/mongo/mongod.conf"]

  # DVWA - Damn Vulerable Web Application - You can uncomment it and use it to test the UI and the tools.
  # Just enter localhost:4280 as target domain - some tools will naturally fail since they expect https and others.
  # We might add a real working lab with https and subdomains etc. at some stage.  BIG THANKS TO https://github.com/digininja/DVWA
  # dvwa:
  #   image: ghcr.io/digininja/dvwa:latest
  #   environment:
  #     - DB_SERVER=dvwa-mariadb
  #   depends_on:
  #     - dvwa-mariadb
  #   ports:
  #     - 4280:80
  #   hostname: dvwa-server
  #   restart: unless-stopped

  # dvwa-mariadb:
  #   image: docker.io/library/mariadb:latest
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=dvwa
  #     - MYSQL_DATABASE=dvwa
  #     - MYSQL_USER=dvwa
  #     - MYSQL_PASSWORD=p@ssw0rd
  #   volumes:
  #     - dvwa:/var/lib/mysql
  #   restart: unless-stopped

volumes:
  mongodb_data:
  dvwa:
